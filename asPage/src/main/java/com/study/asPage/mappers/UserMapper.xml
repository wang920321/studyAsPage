<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.asPage.dao.UserDao">
	<!-- 先定义一个Interface，UserMapper，然后Mapper文件的namespace指向的就是这个Interface， UserInterface里定义的方法和UserMapper.xml文件中的一样, 
		然后代码里直接使用接口 -->
	<resultMap id="BaseResultMap" type="com.study.asPage.entry.Student">
		<id column="sId" property="sId" jdbcType="INTEGER" />
		<result column="studentName" property="studentName" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="statu" property="statu" jdbcType="INTEGER"/>
	</resultMap>
	<!--可以定义多个resultMap  -->
	<resultMap id="BaseResultMap1" type="com.study.asPage.entry.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>
	
    <!--可以定义多个sql  -->
	<sql id="Base_Column_List">
		id, userName, password
	</sql>
	<sql id="Base_Column_List1">
	    sId,studentName,age
	</sql>

	

	<!--用户登录 -->
	<select id="loginByUserNameAndPassword"  resultMap="BaseResultMap1" parameterType="com.study.asPage.entry.User">
		select 
		<include refid="Base_Column_List" />
		 from t_User 
		 where 
		 userName = #{username} 
		 and password = #{password} 
	</select>
	
	<!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List1" />
		from t_student
		<if test="start!=null and pageSize!=null">
		<!--#{start},#{pageSize}传入的map集合中的key  -->
		    where statu="1"
			limit #{start},#{pageSize} 
		</if>
	</select>

	<!--查询所有用户数据 -->
	<select id="selectUserList" resultType="com.study.asPage.entry.User">
		select
		<include refid="Base_Column_List" />
		from tb_user
	</select>

	<!-- 查询用户记录总数 -->
	<select id="selectCount" resultType="int">
		select count(*) from t_student where statu=1
	</select>
	<delete id="deleteStudent" parameterType="Integer">
	    delete from t_student where sId=#{sId}
	</delete>
	<update id="updateStatu" parameterType="INTEGER">
	    update t_student set statu="0" where sId=#{sId}
	</update>
	<update id="update" parameterType="com.study.asPage.entry.Student">
	    update t_student set studentName=#{studentName},age=#{age} where sId=#{sId}
	</update>
	<select id="selectById" parameterType="INTEGER" resultType="com.study.asPage.entry.Student">
	    select * from t_student where sId=#{sId}
	</select>
	<insert id="addStudent" parameterType="com.study.asPage.entry.Student">
	    insert into t_student (sId,studentName,age,statu) values (#{sId},#{studentName},#{age},1)
	</insert>
</mapper>